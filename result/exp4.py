import matplotlib.pyplot as plt

# Sequential data
sequential_data = [
    (50, -0.062534), (18, -0.063674), (19, -0.064000), (59, -0.064039),
    (24, -0.075793), (57, -0.079737), (42, -0.088529), (16, -0.089494),
    (55, -0.099494), (14, -0.103261), (71, -0.127424), (5, -0.129577),
    (54, -0.140575), (35, -0.140575), (79, -0.144828), (4, -0.147368),
    (63, -0.151079), (60, -0.153558), (52, -0.154717), (17, -0.157480),
    (43, -0.158103), (46, -0.158103), (33, -0.168103), (26, -0.173333),
    (47, -0.173516), (75, -0.180952), (1, -0.182692), (34, -0.184080),
    (36, -0.185000), (80, -0.185930), (10, -0.187817), (77, -0.196809),
    (27, -0.201117), (67, -0.210526), (64, -0.214286), (44, -0.218750),
    (62, -0.229730), (28, -0.232877), (53, -0.236111), (15, -0.236111),
    (61, -0.248175), (11, -0.255814), (51, -0.257812), (3, -0.259843),
    (74, -0.268293), (7, -0.270492), (37, -0.270492), (66, -0.270492),
    (78, -0.285714), (76, -0.290909), (2, -0.290909), (70, -0.304762),
    (0, -0.307692), (9, -0.316832), (65, -0.323232), (73, -0.326531),
    (6, -0.340659), (68, -0.384615), (13, -0.394737), (8, -0.416667),
    (25, -0.428571), (69, -0.460317), (45, -0.467742), (72, -0.483333)
]

# PP data
pp_data = [
    (50, -0.051991), (18, -0.058805), (19, -0.060066), (59, -0.061301),
    (50, -0.069470), (18, -0.076960), (19, -0.078046), (59, -0.079643),
    (16, -0.081019), (55, -0.094595), (14, -0.099624), (55, -0.101918),
    (76, -0.105898), (35, -0.116162), (57, -0.118110), (42, -0.121331),
    (67, -0.123711), (36, -0.124294), (69, -0.125000), (51, -0.127596),
    (60, -0.131661), (79, -0.135313), (76, -0.139456), (43, -0.144044),
    (33, -0.145299), (68, -0.147727), (5, -0.148368), (16, -0.150150),
    (34, -0.153846), (24, -0.155102), (80, -0.156379), (27, -0.159322),
    (57, -0.159864), (69, -0.162069), (36, -0.169173), (63, -0.178218),
    (5, -0.179104), (68, -0.179167), (17, -0.179916), (53, -0.183673),
    (24, -0.184210), (11, -0.187166), (51, -0.187500), (42, -0.188172),
    (64, -0.192308), (15, -0.195531), (70, -0.197044), (4, -0.197740),
    (53, -0.198068), (25, -0.201149), (27, -0.203488), (6, -0.206186),
    (78, -0.206349), (2, -0.211180), (71, -0.213836), (10, -0.215470),
    (60, -0.216667), (35, -0.216667), (63, -0.217877), (47, -0.217877),
    (34, -0.218391), (66, -0.222973), (2, -0.223529), (43, -0.224490),
    (46, -0.230303), (9, -0.230769), (3, -0.232394), (79, -0.232704),
    (8, -0.238710), (52, -0.240260), (61, -0.240876), (52, -0.240876),
    (62, -0.244444), (8, -0.246269), (37, -0.246575), (26, -0.246575),
    (44, -0.246575), (54, -0.246575), (65, -0.248276), (54, -0.250000),
    (44, -0.250000), (74, -0.250000), (6, -0.250000), (80, -0.255319),
    (71, -0.257143), (11, -0.260870), (15, -0.262774), (26, -0.266667),
    (13, -0.269231), (66, -0.269231), (37, -0.271186), (78, -0.271186),
    (4, -0.275591), (0, -0.279279), (70, -0.281818), (65, -0.283186),
    (73, -0.287671), (75, -0.293104), (73, -0.298246), (33, -0.303922),
    (28, -0.313131), (64, -0.314286), (61, -0.314815), (72, -0.322917),
    (62, -0.330000), (7, -0.333333), (14, -0.333333), (47, -0.340909),
    (28, -0.347368), (3, -0.351064), (75, -0.361446), (74, -0.361446),
    (46, -0.365854), (10, -0.365854), (25, -0.367816), (77, -0.379747),
    (45, -0.385542), (13, -0.389610), (72, -0.390244), (17, -0.391892),
    (67, -0.397260), (0, -0.418919), (1, -0.426471), (7, -0.436620),
    (9, -0.442857), (45, -0.491525), (1, -0.491803), (77, -0.568627)
]

# Sorting and extracting values for sequential
sequential_sorted = sorted(sequential_data, key=lambda x: x[1], reverse=True)
seq_moves, seq_values = zip(*sequential_sorted)

# Sorting and extracting values for PP
pp_sorted = sorted(pp_data, key=lambda x: x[1], reverse=True)
pp_moves, pp_values = zip(*pp_sorted)

# Plot sequential with adjusted x-axis labels and larger figure size
plt.figure(figsize=(16, 8))
plt.bar(range(len(seq_values)), seq_values, tick_label=seq_moves, color='blue')
plt.title("Sequential Move Probabilities (Value High to Low)", fontsize=16)
plt.xlabel("Move", fontsize=14)
plt.ylabel("Value", fontsize=14)
plt.xticks(rotation=90, fontsize=10)
plt.tight_layout()
plt.show()

# Plot PP with adjusted x-axis labels and larger figure size
plt.figure(figsize=(16, 8))
plt.bar(range(len(pp_values)), pp_values, tick_label=pp_moves, color='green')
plt.title("PP Move Probabilities (Value High to Low)", fontsize=16)
plt.xlabel("Move", fontsize=14)
plt.ylabel("Value", fontsize=14)
plt.xticks(rotation=90, fontsize=10)
plt.tight_layout()
plt.show()
